// project is Maven-style
apply plugin: 'groovy'
apply plugin: 'maven'

// eclipse project generation support
apply plugin: 'eclipse'

// identifiers
group = 'org.gradlelatex'
version = '1.0-SNAPSHOT'


dependencies {
  // make this a gradle plugin project
  compile gradleApi()
  compile localGroovy()
  
  // testing
  testCompile group:'junit', name:'junit', version:'4.12'
}


// use main Maven repos
repositories {
  mavenLocal()
  mavenCentral()
}


// print test report (for Travis)
test {
  afterTest { desc, result ->
    println "  Test ${desc.className}.${desc.name} - ${result.resultType}"
  }
}


// extra eclipse setup
eclipse {
  // do not hardcode Maven repo in project file
  pathVariables 'M2_REPO': file(repositories[0].url)
}


/**
 * define extra tasks to package sources/test classes/javadoc and add to build lifecycle
 */
task sources(type: Jar, group: 'Build', description: 'Package sources', dependsOn: 'classes') {
  classifier = 'sources'
  from sourceSets.main.groovy
}

task testJar(type: Jar, group: 'Build', description: 'Assemble JAR archive with test classes', dependsOn: 'testClasses') {
  classifier = 'tests'
  from sourceSets.test.output
}

task packageJavadoc(type: Jar, group: 'Build', description: 'Packages output of groovydoc', dependsOn: 'groovydoc') {
  classifier = 'javadoc'
  from tasks.groovydoc.destinationDir
}

artifacts {
  archives tasks.sources
  archives tasks.testJar
  archives tasks.packageJavadoc
}